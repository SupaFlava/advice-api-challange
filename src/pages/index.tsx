"use client";

import Head from "next/head";
import { Inter } from "next/font/google";
import StyledButton from "@/compoenents/StyledButton";
import { StyledBtnContainer } from "@/compoenents/StyledButtonContainer";
import styled, { ThemeProvider } from "styled-components";
import { useEffect, useState } from "react";
import { GlobalStyles } from "@/styles/global";
import { theme } from "@/styles/theme";
const inter = Inter({ subsets: ["latin"] });

const SearchBox = styled.input`
  width: 180px;
  height: 40px;
  color: blue;
  background-color: white;
  font-size: 22px;
  border-radius: 5px;
  border: none;
`;

type AdviceData = {
  slip: {
    id: number;
    advice: string;
  };
};
interface SuccessResponse {
  message: string;
}

interface ErrorResponse {
  error: string;
}

type ApiResponse = SuccessResponse | ErrorResponse;

export default function Home() {
  const [advice, setAdvice] = useState<string>("");
  const [searchTerm, setSearchTerm] = useState<string>("");

  useEffect(() => {
    async function fetchData() {
      if (!searchTerm) {
        const response = await fetch("https://api.adviceslip.com/advice");
        const data: AdviceData = await response.json();
        setAdvice(data.slip.advice);
      }
      const response = await fetch(
        `https://api.adviceslip.com/advice/search/${searchTerm}`
      );
      const data: ApiResponse = await response.json();
      setAdvice(data);
      console.log(data);
    }
    fetchData();
  }, []);
  const handleSearch = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    console.log(searchTerm);
  };

  return (
    <ThemeProvider theme={theme}>
      <GlobalStyles />
      {true}

      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <h1>Solid advice</h1>
        <StyledBtnContainer>
          <StyledButton>Cheese</StyledButton>
          <StyledButton>Love</StyledButton>
          <StyledButton>Friends</StyledButton>
          <StyledButton>Sleep</StyledButton>
          <StyledButton>Food</StyledButton>
          <StyledButton>Spriders</StyledButton>
          <StyledButton>work</StyledButton>
          <StyledButton>Regret</StyledButton>
        </StyledBtnContainer>
        <div>
          <form onSubmit={handleSearch}>
            <label htmlFor="search">Search for Advice:</label>
            <SearchBox
              type="text"
              name="search"
              id="search"
              onChange={(e) => setSearchTerm(e.target.value)}
            />
            <StyledButton type="submit">search</StyledButton>
          </form>
        </div>
        <h1>{advice}</h1>
      </div>
    </ThemeProvider>
  );
}
